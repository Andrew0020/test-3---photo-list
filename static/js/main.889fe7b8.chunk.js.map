{"version":3,"sources":["components/Header/index.js","assets/img/loading_spinner.gif","components/Modal/index.js","components/Content/index.js","components/Footer/index.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","Modal","visible","onClose","imageId","useState","imgSrc","setImgSrc","isLoading","setIsLoading","comments","setComments","isInputNameError","setIsInputNameError","isInputCommentError","setIsInputCommentError","inputNameValue","setInputNameValue","inputCommentValue","setInputCommentValue","useEffect","fetch","then","response","json","data","url","Fragment","onClick","src","alt","loading","length","map","comment","date","Date","toLocaleDateString","text","id","cn","placeholder","onChange","e","target","value","Boolean","method","headers","body","JSON","stringify","name","console","log","status","statusText","now","Content","imageList","setImageList","isModal","setModal","setImageId","handleClick","event","getAttribute","item","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.889fe7b8.chunk.js","sourcesContent":["import './index.css';\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className=\"header\">\r\n      Test app\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/loading_spinner.4165b216.gif\";","import React, { useState, useEffect } from 'react';\r\nimport cn from 'classnames';\r\n\r\n// import noImage from '../../assets/img/no-image.png';\r\nimport loading from '../../assets/img/loading_spinner.gif';\r\nimport './index.css';\r\n\r\nconst Modal = ({\r\n    visible = false,\r\n    onClose,\r\n    imageId,\r\n}) => {\r\n    const [imgSrc, setImgSrc] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [comments, setComments] = useState([]);\r\n    const [isInputNameError, setIsInputNameError] = useState(false);\r\n    const [isInputCommentError, setIsInputCommentError] = useState(false);\r\n    const [inputNameValue, setInputNameValue] = useState('');\r\n    const [inputCommentValue, setInputCommentValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        // получения большого изображения и списка комментариев\r\n        imageId && fetch(`https://boiling-refuge-66454.herokuapp.com/images/${imageId}`)\r\n            .then((response) => {\r\n                return response.json();\r\n            })\r\n            .then((data) => {\r\n                setImgSrc(data.url);\r\n                setComments(data.comments);\r\n                setIsLoading(false);\r\n            });\r\n\r\n        return () => {\r\n            setImgSrc(null);\r\n            setComments([]);\r\n            setIsLoading(true);\r\n        }\r\n\r\n        // на случай, если отвалится api (для тестового задания)\r\n        // const imageId237 = {\"id\":237,\"url\":\"https://picsum.photos/id/237/600/400\",\"comments\":[{\"id\":153,\"text\":\"Крутая фотка\",\"date\":1578054737927}]};\r\n        // const imageId238 = {\"id\":238,\"url\":\"https://picsum.photos/id/238/600/400\",\"comments\":[]};\r\n        // const imageId239 = {\"id\":239,\"url\":\"https://picsum.photos/id/239/600/400\",\"comments\":[]};\r\n        // const imageId240 = {\"id\":240,\"url\":\"https://picsum.photos/id/240/600/400\",\"comments\":[{\"id\":154,\"text\":\"Мне нравится\",\"date\":1578054737927}]};\r\n        // const imageId241 = {\"id\":241,\"url\":\"https://picsum.photos/id/241/600/400\",\"comments\":[]};\r\n        // const imageId242 = {\"id\":242,\"url\":\"https://picsum.photos/id/242/600/400\",\"comments\":[]};\r\n    }, [imageId]);\r\n\r\n    if (!visible) return null;\r\n\r\n    const onChangeInputName = (e) => {\r\n        setIsInputNameError(false);\r\n        setInputNameValue(e.target.value);\r\n    }\r\n\r\n    const onChangeInputComment = (e) => {\r\n        setIsInputCommentError(false);\r\n        setInputCommentValue(e.target.value);\r\n    }\r\n\r\n    const addComment = () => {\r\n        if (!Boolean(inputNameValue)) {\r\n            setIsInputNameError(true);\r\n        }\r\n\r\n        if (!Boolean(inputCommentValue)) {\r\n            setIsInputCommentError(true);\r\n        }\r\n\r\n        if (Boolean(inputNameValue) && Boolean(inputCommentValue)) {\r\n            // добавление комментария (204 – OK, комментарий не сохраняется)\r\n            fetch(`https://boiling-refuge-66454.herokuapp.com/images/${imageId}/comments`, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json;charset=utf-8'\r\n                },\r\n                body: JSON.stringify({\r\n                    name: inputNameValue,\r\n                    comment: inputCommentValue\r\n                })\r\n            })\r\n                .then((response) => {\r\n                    console.log(response.status + ': ' + response.statusText);\r\n\r\n                    if (response.status === 204 ) {\r\n                        setComments((comments) => [...comments, {\r\n                            id: Date.now(),\r\n                            text: inputCommentValue,\r\n                            date: Date.now(),\r\n                        }]);\r\n                        setInputNameValue('');\r\n                        setInputCommentValue('');\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"substrate\" onClick={onClose} />\r\n            <div className=\"modal\">\r\n                <div className=\"photo\">\r\n                    <img className=\"img\" src={imgSrc} alt=\"\" />\r\n                    {isLoading && (\r\n                        <img className=\"loadingModal\" src={loading} alt=\"loading\" />\r\n                    )}\r\n                </div>\r\n\r\n                <div className=\"comments\">\r\n                    { comments.length > 0\r\n                        ? comments.map((comment) => {\r\n                            return (\r\n                                <div className=\"comment\" key={comment.id}>\r\n                                    <div className=\"date\">{comment.date && new Date(comment.date).toLocaleDateString()}</div>\r\n                                    <div>{comment.text}</div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                        : (\r\n                            <div className=\"comment\">\r\n                                <div className=\"date\">xx.xx.xx</div>\r\n                                <div>Здесь будет Ваш комментарий</div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n\r\n                <div className=\"add-comment\">\r\n                    <input\r\n                        id=\"name\"\r\n                        className={cn({\r\n                            'input': true,\r\n                            'input-error': isInputNameError\r\n                        })}\r\n                        placeholder=\"Ваше имя\"\r\n                        onChange={onChangeInputName}\r\n                        value={inputNameValue}\r\n                    />\r\n                    <input\r\n                        id=\"comment\"\r\n                        className={cn({\r\n                            'input': true,\r\n                            'input-error': isInputCommentError\r\n                        })}\r\n                        placeholder=\"Ваш комментарий\"\r\n                        onChange={onChangeInputComment}\r\n                        value={inputCommentValue}\r\n                    />\r\n                    <div className=\"add-comment-button\" onClick={addComment}>Оставить комментарий</div>\r\n                </div>\r\n\r\n                <div className=\"close\" onClick={onClose} />\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Modal from '../Modal';\r\n\r\nimport loading from '../../assets/img/loading_spinner.gif';\r\nimport './index.css';\r\n\r\nconst Content = () => {\r\n  const [imageList, setImageList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isModal, setModal] = useState(false);\r\n  const [imageId, setImageId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // получение списка фотографий\r\n    fetch('https://boiling-refuge-66454.herokuapp.com/images')\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        setImageList(data);\r\n        setIsLoading(false);\r\n      });\r\n\r\n    // на случай, если отвалится api (для тестового задания)\r\n    // const imageList = [\r\n    //   {\"id\":237,\"url\":\"https://picsum.photos/id/237/300/200\"},\r\n    //   {\"id\":238,\"url\":\"https://picsum.photos/id/238/300/200\"},\r\n    //   {\"id\":239,\"url\":\"https://picsum.photos/id/239/300/200\"},\r\n    //   {\"id\":240,\"url\":\"https://picsum.photos/id/240/300/200\"},\r\n    //   {\"id\":241,\"url\":\"https://picsum.photos/id/241/300/200\"},\r\n    //   {\"id\":242,\"url\":\"https://picsum.photos/id/242/300/200\"}\r\n    // ];\r\n  }, []);\r\n\r\n  const onClose = () => setModal(false);\r\n\r\n  const handleClick = (event) => {\r\n    const id = event.target.getAttribute('id');\r\n\r\n    setImageId(id);\r\n    setModal(true);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"content\">\r\n        { imageList.map((item) => {\r\n          return (\r\n            <div className=\"item\" key={item.id} onClick={handleClick}>\r\n              <img id={item.id} src={item.url} alt=\"\" />\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        {isLoading && (\r\n          <div className=\"loading\">\r\n            <img src={loading} alt=\"loading\" />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <Modal\r\n        visible={isModal}\r\n        onClose={onClose}\r\n        imageId={imageId}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Content;\r\n","import './index.css';\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      © 2018-2019\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import Header from '../Header';\r\nimport Content from '../Content';\r\nimport Footer from '../Footer';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      <div className=\"app-content\">\r\n        <Content />\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}